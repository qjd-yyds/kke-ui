.button-size(@height;@padding-horizontal;@font-size;@border-radius) {
  @padding-vertical: max((round(((@height - @font-size * @line-height-base) / 2) * 10) / 10) - @border-width-base, 0);
  height: @height;
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  border-radius: @border-radius;
}
.button-color(@color; @background; @border) {
  color: @color;
  border-color: @border;
  & when not(@background = null) {
    background: @background;
  }
  > a:only-child {
    color: currentcolor;

    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: transparent;
      content: '';
    }
  }
}
.button-disabled(@color: @btn-disable-color; @background: @btn-disable-bg; @border: @btn-disable-border) {
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      .button-color(@color; @background; @border);

      text-shadow: none;
      box-shadow: none;
    }
  }
}
.button-variant-primary(@color; @background; @backgroundHover: yellow; @backgroundActive: yellow) {
  .button-color(@color; @background; @background);

  text-shadow: @btn-text-shadow;
  box-shadow: @btn-primary-shadow;

  &:hover,
  &:focus {
    .button-color(@color; @backgroundHover; @backgroundHover);
  }

  &:active {
    .button-color(@color; @backgroundActive; @backgroundActive);
  }

  .button-disabled();
}
.button-variant-other(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover,
  &:focus {
    .button-color(@primary-color-hover; @background; @primary-color-hover);
  }

  &:active {
    .button-color(@primary-color-active; @background; @primary-color-active);
  }
  .button-disabled();
}
.btn-primary() {
  .button-variant-primary(@btn-primary-color;@btn-primary-bg;@primary-color-hover;@primary-color-active);
}
.btn-default() {
  .button-variant-other(@btn-default-color; @btn-default-bg; @btn-default-border; );

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    background: @btn-default-bg;
  }
}
.btn-danger() {
  .button-variant-primary(@btn-danger-color;@btn-danger-bg;@danger-color-hover;@danger-color-active);
}
.btn-success() {
  .button-variant-primary(@btn-success-color;@btn-success-bg;@success-color-hover;@success-color-active);
}
.btn-warning() {
  .button-variant-primary(@btn-warning-color;@btn-warning-bg;@warning-color-hover;@warning-color-active);
}
.btn-info() {
  .button-variant-primary(@btn-info-color;@btn-info-bg;@info-color-hover;@info-color-active);
}
.btn() {
  position: relative;
  display: inline-block;
  font-weight: @btn-font-weight;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  border: @btn-border-width @btn-border-style transparent;
  box-shadow: @btn-shadow;
  cursor: pointer;
  transition: all 0.3s @ease-in-out;
  user-select: none;
  touch-action: manipulation;
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-lg {
    .button-size(
      @btn-height-lg; @btn-padding-horizontal-lg; @btn-font-size-lg; @btn-border-radius-base
    );
  }

  &-sm {
    .button-size(
      @btn-height-sm; @btn-padding-horizontal-sm; @btn-font-size-sm; @btn-border-radius-sm
    );
  }
}
